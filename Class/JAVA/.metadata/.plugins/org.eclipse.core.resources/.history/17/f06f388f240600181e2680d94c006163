package com.test.lambda;

public class Ex01 {
	
	public static void main(String[] args) {
		
		/*
			람다식, lambda
			- 객체 지향 프로그래밍 코드 패턴 -> 함수 지향 프로그래밍 패턴
			- JDK 1.8부터 지원
			- 익명 객체 사용
			- 람다식은 익명 함수를 만들기 위해 사용. 자바는 익명 클래스를 사용해서 익명 메소드를 만든다.
			    람다식을 사용하면 익명 객체를 통해 익명 함수를 만들 수 있다. -> 인터페이스 사용
			    
			람다식을 사용한 함수 만들기
			- 함수적 스타일 문법 사용
			
			public void m1() {
				
				구현부;
			}
			
			(매개변수) -> { 구현부 ; }
			
			- 일반적인 람다식을 사용한 함수
			(int a) -> { syso(a); }
			
			- 호출부(구현부)쪽에서 매개변수의 타입을 유추
			(a) -> { syso(a); }
			
			- 매개 변수가 1개일 때 소괄호 생략 가능
			a -> { syso(a); }
			
			- 실행문 1줄일 때 중괄호 생략 가능
			a -> syso(a);
		*/
	}
}